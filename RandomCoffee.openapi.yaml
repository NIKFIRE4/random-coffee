openapi: 3.1.0
info:
  title: RandomCoffee
  version: 0.1.1

tags:
  - name: interests
  - name: schedule
  - name: meet
  - name: user
  - name: auth


paths:
  /interests:
    get:
      tags:
        - interests
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interests'

  /interests/{userId}:
    get:
      tags:
        - interests
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInterests'
    post:
      tags:
        - interests
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInterests'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInterests'

  /schedule/{userId}:
    get:
      tags:
        - schedule
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchedule'
    post:
      tags:
        - schedule
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          required: false
          schema:
            type: string
            format: date
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserScheduleChange'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchedule'

  /user/{userId}:
    get:
      tags:
        - user
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
        - user
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '200':
          description: Successful change
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /register:
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'

  /login:
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDetails'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'

  /meet/history/{userId}:
    get:
      tags:
        - meet
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: start_date
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryMeets'

  /meet/future/{userId}:
    get:
      tags:
        - meet
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FutureMeets'


  /meet/approve/{userId}/{meetId}:
    post:
      tags:
        - meet
      security:
        - bearerAuth: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: meetId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success

components:
  schemas:
    HistoryMeets:
      type: array
      items:
        $ref: '#/components/schemas/HistoryMeet'

    HistoryMeet:
      type: object
      properties:
        date:
          type: string
          format: date
        secondName:
          type: string
        secondTgHandle:
          type: string

    FutureMeets:
      type: object
      properties:
        notApproved:
          type: array
          items:
            $ref: '#/components/schemas/HistoryMeet'
        approved:
          type: array
          items:
            $ref: '#/components/schemas/FutureMeet'

    FutureMeet:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
          format: date
        slot:
          $ref: '#/components/schemas/TimeSlot'
        secondName:
          type: string
        secondTg:
          type: string

    FutureMeetNotApproved:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
          format: date
        slot:
          $ref: '#/components/schemas/TimeSlot'

    LoginDetails:
      type: object
      properties:
        login:
          type: string
        password:
          type: string

    JwtResponse:
      type: string

    UserRegister:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        tg_handle:
          type: string
        display_name:
          type: string
        tos_accept:
          type: boolean

    User:
      type: object
      properties:
        login:
          type: string
        tg_handle:
          type: string
        display_name:
          type: string

    Interest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    InterestGroup:
      type: object
      properties:
        name:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Interest'

    UserInterests:
      type: array
      items:
        $ref: '#/components/schemas/Interest'

    Interests:
      type: array
      items:
        $ref: '#/components/schemas/InterestGroup'

    ScheduleSlot:
      type: object
      properties:
        date:
          type: string
          format: date
        timeOfDate:
          $ref: '#/components/schemas/TimeSlot'

    TimeSlot:
      type: integer
      oneOf:
        - title: morning
          const: 0
        - title: day
          const: 1
        - title: evening
          const: 2

    UserSchedule:
      type: array
      items:
        $ref: '#/components/schemas/ScheduleSlot'

    UserScheduleChange:
      type: object
      properties:
        toDelete:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleSlot'
        toAdd:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleSlot'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
